{"ref":"5bcb3e8e-e022-4b11-9a77-739c69f5c3dc","syncData":{"version":1,"machineId":"33876bba-ef10-41a2-8ea4-7a5c14d99353","content":"{\"vscode-snippets-24072024.code-snippets\":\"{\\n\\t// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and \\n\\t// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope \\n\\t// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is \\n\\t// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: \\n\\t// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. \\n\\t// Placeholders with the same ids are connected.\\n\\t// Example:\\n\\t// \\\"Print to console\\\": {\\n\\t// \\t\\\"scope\\\": \\\"javascript,typescript\\\",\\n\\t// \\t\\\"prefix\\\": \\\"log\\\",\\n\\t// \\t\\\"body\\\": [\\n\\t// \\t\\t\\\"console.log('$1');\\\",\\n\\t// \\t\\t\\\"$2\\\"\\n\\t// \\t],\\n\\t// \\t\\\"description\\\": \\\"Log output to console\\\"\\n\\t// }\\n}\",\"snippets-24072024.code-snippets\":\"{\\n\\t// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and \\n\\t// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope \\n\\t// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is \\n\\t// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: \\n\\t// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. \\n\\t// Placeholders with the same ids are connected.\\n\\t// Example:\\n\\t// \\\"Print to console\\\": {\\n\\t// \\t\\\"scope\\\": \\\"javascript,typescript\\\",\\n\\t// \\t\\\"prefix\\\": \\\"log\\\",\\n\\t// \\t\\\"body\\\": [\\n\\t// \\t\\t\\\"console.log('$1');\\\",\\n\\t// \\t\\t\\\"$2\\\"\\n\\t// \\t],\\n\\t// \\t\\\"description\\\": \\\"Log output to console\\\"\\n\\t// }\\n}\",\"snippets.code-snippets\":\"{\\n\\t// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and \\n\\t// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope \\n\\t// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is \\n\\t// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: \\n\\t// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. \\n\\t// Placeholders with the same ids are connected.\\n\\t// Example:\\n\\t// \\\"Print to console\\\": {\\n\\t// \\t\\\"scope\\\": \\\"javascript,typescript\\\",\\n\\t// \\t\\\"prefix\\\": \\\"log\\\",\\n\\t// \\t\\\"body\\\": [\\n\\t// \\t\\t\\\"console.log('$1');\\\",\\n\\t// \\t\\t\\\"$2\\\"\\n\\t// \\t],\\n\\t// \\t\\\"description\\\": \\\"Log output to console\\\"\\n\\t// }\\n}\",\"keybindings.code-snippets\":\"[\\n\\t{\\n\\t\\t\\\"key\\\": \\\"cmd+b\\\",\\n\\t\\t\\\"command\\\": \\\"editor.action.revealDefinition\\\",\\n\\t\\t\\\"when\\\": \\\"editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"key\\\": \\\"a\\\",\\n\\t\\t\\\"command\\\": \\\"explorer.newFile\\\",\\n\\t\\t\\\"when\\\": \\\"filesExplorerFocus && !inputFocus\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"key\\\": \\\"shift+a\\\",\\n\\t\\t\\\"command\\\": \\\"explorer.newFolder\\\",\\n\\t\\t\\\"when\\\": \\\"filesExplorerFocus && !inputFocus\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"key\\\": \\\"alt+enter\\\",\\n\\t\\t\\\"command\\\": \\\"editor.action.quickFix\\\",\\n\\t\\t\\\"when\\\": \\\"editorHasCodeActionsProvider && editorTextFocus && !editorReadonly\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"key\\\": \\\"alt+enter\\\",\\n\\t\\t\\\"command\\\": \\\"workbench.action.terminal.quickFix\\\",\\n\\t\\t\\\"when\\\": \\\"terminalFocus && terminalProcessSupported\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"key\\\": \\\"alt+enter\\\",\\n\\t\\t\\\"command\\\": \\\"problems.action.showQuickFixes\\\",\\n\\t\\t\\\"when\\\": \\\"problemFocus\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"key\\\": \\\"ctrl+shift+e\\\", // when Explorer not open\\n\\t\\t\\\"command\\\": \\\"workbench.files.action.focusFilesExplorer\\\",\\n\\t\\t\\\"when\\\": \\\"!explorerViewletVisible\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"key\\\": \\\"ctrl+shift+e\\\", // when Explorer open\\n\\t\\t\\\"command\\\": \\\"workbench.action.toggleSidebarVisibility\\\",\\n\\t\\t\\\"when\\\": \\\"explorerViewletVisible\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"key\\\": \\\"ctrl+.\\\",\\n\\t\\t\\\"command\\\": \\\"breadcrumbs.focusAndSelect\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"key\\\": \\\"ctrl+shift+g\\\",\\n\\t\\t\\\"command\\\": \\\"-workbench.view.scm\\\",\\n\\t\\t\\\"when\\\": \\\"workbench.scm.active\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"key\\\": \\\"ctrl+b\\\",\\n\\t\\t\\\"command\\\": \\\"-workbench.action.toggleSidebarVisibility\\\"\\n\\t}\\n]\"}"}}